{"ast":null,"code":"var _jsxFileName = \"D:\\\\Disk\\\\Personal\\\\test4\\\\receipt-generator-app\\\\src\\\\components\\\\ThreeJSBackground.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ThreeJSBackground() {\n  _s();\n  const mountRef = useRef(null);\n  useEffect(() => {\n    const mount = mountRef.current;\n\n    // Scene setup\n    const scene = new THREE.Scene();\n\n    // Camera setup\n    const camera = new THREE.PerspectiveCamera(75, mount.clientWidth / mount.clientHeight, 0.1, 1000);\n    camera.position.z = 5;\n\n    // Renderer setup\n    const renderer = new THREE.WebGLRenderer({\n      alpha: true,\n      antialias: true\n    });\n    renderer.setSize(mount.clientWidth, mount.clientHeight);\n    mount.appendChild(renderer.domElement);\n\n    // Glow yellow light\n    const yellowLight = new THREE.PointLight(0xFFD700, 1, 100);\n    yellowLight.position.set(0, 0, 10);\n    scene.add(yellowLight);\n\n    // Shopping cart geometry (simple box with wheels)\n    const cartGroup = new THREE.Group();\n    const cartBodyGeometry = new THREE.BoxGeometry(2, 1, 1);\n    const cartBodyMaterial = new THREE.MeshStandardMaterial({\n      color: 0xFFD700,\n      emissive: 0xFFD700,\n      emissiveIntensity: 0.6,\n      transparent: true,\n      opacity: 0.8\n    });\n    const cartBody = new THREE.Mesh(cartBodyGeometry, cartBodyMaterial);\n    cartGroup.add(cartBody);\n    const wheelGeometry = new THREE.CylinderGeometry(0.3, 0.3, 0.2, 32);\n    const wheelMaterial = new THREE.MeshStandardMaterial({\n      color: 0x000000\n    });\n    const wheelPositions = [[-0.8, -0.6, 0.5], [0.8, -0.6, 0.5], [-0.8, -0.6, -0.5], [0.8, -0.6, -0.5]];\n    wheelPositions.forEach(pos => {\n      const wheel = new THREE.Mesh(wheelGeometry, wheelMaterial);\n      wheel.rotation.z = Math.PI / 2;\n      wheel.position.set(...pos);\n      cartGroup.add(wheel);\n    });\n    scene.add(cartGroup);\n\n    // Ambient light\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.3);\n    scene.add(ambientLight);\n\n    // Animation variables\n    let direction = 1;\n    let positionX = 0;\n\n    // Animation loop\n    function animate() {\n      requestAnimationFrame(animate);\n\n      // Move cart left and right\n      positionX += 0.02 * direction;\n      if (positionX > 3 || positionX < -3) direction *= -1;\n      cartGroup.position.x = positionX;\n\n      // Rotate wheels\n      cartGroup.children.forEach(child => {\n        if (child.geometry.type === 'CylinderGeometry') {\n          child.rotation.x += 0.1 * direction;\n        }\n      });\n      renderer.render(scene, camera);\n    }\n    animate();\n\n    // Handle resize\n    function onResize() {\n      camera.aspect = mount.clientWidth / mount.clientHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(mount.clientWidth, mount.clientHeight);\n    }\n    window.addEventListener('resize', onResize);\n\n    // Cleanup on unmount\n    return () => {\n      window.removeEventListener('resize', onResize);\n      mount.removeChild(renderer.domElement);\n      renderer.dispose();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100vw',\n      height: '100vh',\n      zIndex: -1,\n      pointerEvents: 'none'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n_s(ThreeJSBackground, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = ThreeJSBackground;\nvar _c;\n$RefreshReg$(_c, \"ThreeJSBackground\");","map":{"version":3,"names":["React","useRef","useEffect","THREE","jsxDEV","_jsxDEV","ThreeJSBackground","_s","mountRef","mount","current","scene","Scene","camera","PerspectiveCamera","clientWidth","clientHeight","position","z","renderer","WebGLRenderer","alpha","antialias","setSize","appendChild","domElement","yellowLight","PointLight","set","add","cartGroup","Group","cartBodyGeometry","BoxGeometry","cartBodyMaterial","MeshStandardMaterial","color","emissive","emissiveIntensity","transparent","opacity","cartBody","Mesh","wheelGeometry","CylinderGeometry","wheelMaterial","wheelPositions","forEach","pos","wheel","rotation","Math","PI","ambientLight","AmbientLight","direction","positionX","animate","requestAnimationFrame","x","children","child","geometry","type","render","onResize","aspect","updateProjectionMatrix","window","addEventListener","removeEventListener","removeChild","dispose","ref","style","top","left","width","height","zIndex","pointerEvents","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Disk/Personal/test4/receipt-generator-app/src/components/ThreeJSBackground.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport * as THREE from 'three';\r\n\r\nexport default function ThreeJSBackground() {\r\n  const mountRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const mount = mountRef.current;\r\n\r\n    // Scene setup\r\n    const scene = new THREE.Scene();\r\n\r\n    // Camera setup\r\n    const camera = new THREE.PerspectiveCamera(\r\n      75,\r\n      mount.clientWidth / mount.clientHeight,\r\n      0.1,\r\n      1000\r\n    );\r\n    camera.position.z = 5;\r\n\r\n    // Renderer setup\r\n    const renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true });\r\n    renderer.setSize(mount.clientWidth, mount.clientHeight);\r\n    mount.appendChild(renderer.domElement);\r\n\r\n    // Glow yellow light\r\n    const yellowLight = new THREE.PointLight(0xFFD700, 1, 100);\r\n    yellowLight.position.set(0, 0, 10);\r\n    scene.add(yellowLight);\r\n\r\n    // Shopping cart geometry (simple box with wheels)\r\n    const cartGroup = new THREE.Group();\r\n\r\n    const cartBodyGeometry = new THREE.BoxGeometry(2, 1, 1);\r\n    const cartBodyMaterial = new THREE.MeshStandardMaterial({\r\n      color: 0xFFD700,\r\n      emissive: 0xFFD700,\r\n      emissiveIntensity: 0.6,\r\n      transparent: true,\r\n      opacity: 0.8,\r\n    });\r\n    const cartBody = new THREE.Mesh(cartBodyGeometry, cartBodyMaterial);\r\n    cartGroup.add(cartBody);\r\n\r\n    const wheelGeometry = new THREE.CylinderGeometry(0.3, 0.3, 0.2, 32);\r\n    const wheelMaterial = new THREE.MeshStandardMaterial({ color: 0x000000 });\r\n\r\n    const wheelPositions = [\r\n      [-0.8, -0.6, 0.5],\r\n      [0.8, -0.6, 0.5],\r\n      [-0.8, -0.6, -0.5],\r\n      [0.8, -0.6, -0.5],\r\n    ];\r\n\r\n    wheelPositions.forEach(pos => {\r\n      const wheel = new THREE.Mesh(wheelGeometry, wheelMaterial);\r\n      wheel.rotation.z = Math.PI / 2;\r\n      wheel.position.set(...pos);\r\n      cartGroup.add(wheel);\r\n    });\r\n\r\n    scene.add(cartGroup);\r\n\r\n    // Ambient light\r\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.3);\r\n    scene.add(ambientLight);\r\n\r\n    // Animation variables\r\n    let direction = 1;\r\n    let positionX = 0;\r\n\r\n    // Animation loop\r\n    function animate() {\r\n      requestAnimationFrame(animate);\r\n\r\n      // Move cart left and right\r\n      positionX += 0.02 * direction;\r\n      if (positionX > 3 || positionX < -3) direction *= -1;\r\n      cartGroup.position.x = positionX;\r\n\r\n      // Rotate wheels\r\n      cartGroup.children.forEach(child => {\r\n        if (child.geometry.type === 'CylinderGeometry') {\r\n          child.rotation.x += 0.1 * direction;\r\n        }\r\n      });\r\n\r\n      renderer.render(scene, camera);\r\n    }\r\n\r\n    animate();\r\n\r\n    // Handle resize\r\n    function onResize() {\r\n      camera.aspect = mount.clientWidth / mount.clientHeight;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(mount.clientWidth, mount.clientHeight);\r\n    }\r\n    window.addEventListener('resize', onResize);\r\n\r\n    // Cleanup on unmount\r\n    return () => {\r\n      window.removeEventListener('resize', onResize);\r\n      mount.removeChild(renderer.domElement);\r\n      renderer.dispose();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      ref={mountRef}\r\n      style={{\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100vw',\r\n        height: '100vh',\r\n        zIndex: -1,\r\n        pointerEvents: 'none',\r\n      }}\r\n    />\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}